#Date: 11/05/2024
#Author: Murilo Ferreira Lopes
#Code Goal: Answer for 'Valid Sudoku' problem in NeetCode

def hasDuplicate(self, nums: List[int]) -> bool:
        dict = {""}
        size = 1
        for i in range(0, len(nums)):
            old_size = size
            dict.add(nums[i])
            size = len(dict)
            if size == old_size:
                return True
        return False
class Solution:

    def isValidSudoku(self, board: List[List[str]]) -> bool:
        j = 0
        for i in range(0, 9):
            row = [str for str in board[i] if str != '.']
            column = [str for str in [row[i] for row in board if row != '.'] if str != '.']
            box = [str for str in (board[j][3*(i % 3)+0:3 + 3*(i % 3)] + board[j+1][3*(i % 3)+0:3+3*(i % 3)] + board[j+2][3*(i % 3)+0:3+3*(i % 3)]) if str !='.']
            if (hasDuplicate(1,box) or hasDuplicate(1,row)  or hasDuplicate(1,column)):
                return False
            if ((i+1) % 3 == 0):
                j += 3
        return True
